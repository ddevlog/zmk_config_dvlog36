/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    flavor = "tap-preferred";
};

/ {
    macros {
        psd: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp C &kp N &kp F &kp N &kp Y &kp T &kp R &kp N5 &kp LS(A) &kp B &kp D &kp F &kp N5 &kp D &kp B &kp C &kp N1 &kp EXCL &kp EXCL &kp EXCL>;
            label = "NEW_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp E        &kp R             &kp T        &kp Y    &kp U             &kp I           &kp O           &kp P              &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G        &kp H    &mt LEFT_SHIFT J  &mt LCTRL K     &mt LEFT_ALT L  &mt LEFT_GUI SEMI  &none
&none  &kp Z           &kp X           &kp C        &kp V             &kp B        &kp N    &kp M             &kp COMMA       &kp DOT         &kp SINGLE_QUOTE   &none
                                       &kp LGUI     &mo 1             &kp SPACE    &kp RET  &mo 2             &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1              &kp N2        &kp N3     &kp N4          &kp N5       &kp N6                &kp N7     &kp N8          &kp N9         &kp N0           &none
&none  &mt LEFT_GUI ENTER  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &kp ENTER    &none                 &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &none
&none  &kp AT_SIGN         &kp HOME      &none      &kp END         &kp DEL      &kp LG(LS(NUMBER_4))  &kp COMMA  &kp LC(DOT)     &kp PAGE_DOWN  &kp QUESTION     &none
                                         &kp LGUI   &trans          &kp SPACE    &kp BACKSPACE         &mo 3      &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT                &kp HASH        &kp DLLR                &kp PRCNT                  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR      &none
&none  &trans    &kp LEFT_PARENTHESIS  &kp UNDERSCORE  &kp RIGHT_PARENTHESIS   &trans                     &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH      &none
&none  &trans    &trans                &trans          &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT_ARROW))    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp KP_SLASH  &none
                                       &kp LGUI        &mo 3                   &kp SPACE                  &kp RET    &trans     &kp RALT
            >;
        };

        conf {
            bindings = <
&none  &bt BT_SEL 0    &kp F1  &kp F2   &kp F3   &kp F4     &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &bt BT_CLR_ALL  &none
&none  &bt BT_CLR_ALL  &kp F5  &kp F6   &kp F7   &kp F8     &out OUT_BLE  &out OUT_USB  &trans  &trans  &studio_unlock  &none
&none  &bootloader     &kp F9  &kp F10  &kp F11  &kp F11    &psd          &trans        &trans  &trans  &bootloader     &none
                               &trans   &trans   &trans     &trans        &trans        &trans
            >;
        };
    };
};
